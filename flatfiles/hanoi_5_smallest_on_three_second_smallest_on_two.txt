"""
For a game where there are 5 disks,
write down the Facts and Rules to model the game state where 
disk1 (the smallest) is on peg3
disk2 (the second smallest) is on peg2, and
other disks are on peg1.

        |            |            |
        |            |            |
        |            |            |
        |            |            |
     ---|--- disk3   |            |
    ----|----        |            |
   -----|-----     --|-- disk2   -|- disk1
==========================================
       peg1         peg2         peg3
       
Example: 
fact: (pred obj1 obj2)
rule: ((pred obj1 obj2) (pred obj2 obj3)) -> (pred obj1 obj3)

"""

fact: (on disk3 peg1)
fact: (on disk4 peg1)
fact: (on disk5 peg1)
fact: (on disk2 peg2)
fact: (on disk1 peg3)

fact: (not peg1 peg2)
fact: (not peg2 peg1)
fact: (not peg2 peg3)
fact: (not peg3 peg2)
fact: (not peg1 peg3)
fact: (not peg3 peg1)

rule: ((on disk1 ?peg)) -> (top disk1 ?peg)
rule: ((on disk2 ?peg) (on disk1 ?peg2) (not ?peg ?peg2)) -> (top disk2 ?peg)
rule: ((on disk3 ?peg) (on disk1 ?peg2) (on disk2 ?peg3) (not ?peg ?peg2) (not ?peg ?peg3)) -> (top disk3 ?peg)
rule: ((on disk3 ?peg) (on disk1 ?peg2) (on disk2 ?peg2) (not ?peg ?peg2)) -> (top disk3 ?peg)
rule: ((on disk4 ?peg) (on disk1 ?peg2) (on disk2 ?peg2) (on disk3 ?peg2) (not ?peg ?peg2)) -> (top disk4 ?peg)
rule: ((on disk5 ?peg) (on disk1 ?peg2) (on disk2 ?peg2) (on disk3 ?peg2) (on disk4 ?peg2) (not ?peg ?peg2)) -> (top disk4 ?peg)

rule: ((top disk1 ?source) (not ?source ?target)) -> (movable disk1 ?source ?target)
rule: ((top disk2 ?source) (top disk1 ?other) (not ?source ?target) (not ?other ?target)) -> (movable disk2 ?source ?target)
rule: ((top disk3 ?source) (top disk1 ?other) (on disk2 ?other) (not ?source ?target) (not ?other ?target)) -> (movable disk3 ?source ?target)
rule: ((top disk4 ?source) (top disk1 ?other) (on disk2 ?other) (on disk3 ?other) (not ?source ?target) (not ?other ?target)) -> (movable disk4 ?source ?target)
rule: ((top disk5 ?source) (top disk1 ?other) (on disk2 ?other) (on disk3 ?other) (on disk4 ?other) (not ?source ?target) (not ?other ?target)) -> (movable disk5 ?source ?target)